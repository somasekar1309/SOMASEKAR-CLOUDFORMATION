AWSTemplateFormatVersion: "2010-09-09"
Description: Creating the RDS


#LINK:https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#aws-resource-rds-dbinstance--examples
Parameters:
  vpcid:
    Type: String
    Default: 10.0.0.0/19
    Description: cidr value vpc

  SubnetId:
    Type: String
    Default: 10.0.0.0/24
    Description: cidrvalue for subnet

  InstanceType:
    Type: String
    Default: t2.micro
    Description: instance type for thr ec2 instances

  databasename:
    Type: String
    Default: somasekar
    Description: craeting the RDS
  
  dbpassword:
    Type: String
    Description: Password for the database
    MinLength: '8'
    MaxLength: '64'
    ConstraintDescription: Password must be between 8 and 64 characters
   
Resources:

#creating the vpc
  myautoscalingVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: vpcid
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: "default"
      Tags:
      - Key: "Name"
        Value: "vpcautoscaling"

#creating the internet gateway

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: "Name"
        Value: "internetautoscaling"

#attaching the internetgateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: myautoscalingVPC
      InternetGatewayId:
        Ref: InternetGateway 

#craeting the subnet

  mySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myautoscalingVPC
      CidrBlock: 
        Ref: SubnetId
      AvailabilityZone: "us-east-1a"
      Tags:
      - Key: "Name"
        Value: "subnetautoscaling"

#creating the routetable
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: myautoscalingVPC
      Tags:
      - Key: "Name"
        Value: "routeautoscaling"

#adding the inteernetgateway to the rouetable

  myRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway  

# adding the subnet to the routetable

  mySubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: mySubnet
      RouteTableId:
        Ref: RouteTable

#creating the security group

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      GroupName: "autoscaling"
      VpcId: 
        Ref: myautoscalingVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

#creating the key pair
  autoscalingKeyPair:
    Type: 'AWS::EC2::KeyPair'
    Properties:
      KeyName: GOLI

#creating the instances
  autoscalingec2instances:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: "ami-02396cdd13e9a1257"
      InstanceType: 
        Ref: InstanceType      
      KeyName: "GOLI"
      SubnetId:
        Ref: mySubnet
      SecurityGroupIds:
        - Ref: "InstanceSecurityGroup"
      Tags:
       - Key: "Name"
         Value: "scalingec2"

#creating the volume
  NewVolume:
    Type: AWS::EC2::Volume
    Properties: 
      Size: 30
      Encrypted: true
      AvailabilityZone: "us-east-1a"
      Tags:
        - Key: "Name"
          Value: "volume"

#attching the volume to the ec2
  MountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      Device: /dev/sdh
      InstanceId: 
        Ref: autoscalingec2instances
      VolumeId: 
        Ref: NewVolume

#creating the RDS (MYSQL DATABASE)
  MyDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBSecurityGroups:
        - Ref: MyDbSecurityByCIDRIPGroup
      AllocatedStorage: '5'
      DBInstanceClass: db.t2.small
      Engine: MySQL
      MasterUsername: 
        Ref: databasename
      MasterUserPassword: 
        Ref: dbpassword

#CRAETING THE SECURITY THE GROUP FOR THE DATABASE

  MyDbSecurityByCIDRIPGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      GroupDescription: Ingress for CIDRIP
      DBSecurityGroupIngress:
        CIDRIP: "42.249.76.100/32"